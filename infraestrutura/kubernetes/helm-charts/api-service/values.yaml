# Default values for api-service
replicaCount: 2

image:
  repository: gcr.io/mlsecops-deteccao-fraudes-pix/api-service
  pullPolicy: IfNotPresent
  tag: "latest"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext:
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  capabilities:
    drop:
    - ALL

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

resources:
  limits:
    cpu: 1
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

env:
  - name: LOG_LEVEL
    value: "info"
  - name: FEATURE_STORE_URL
    valueFrom:
      configMapKeyRef:
        name: api-service-config
        key: feature_store_url
  - name: MODEL_REGISTRY_URL
    valueFrom:
      configMapKeyRef:
        name: api-service-config
        key: model_registry_url

configMaps:
  api-service-config:
    feature_store_url: "http://feature-store-service:8080"
    model_registry_url: "http://model-registry-service:8080"
    kafka_bootstrap_servers: "kafka:9092"
    monitoring_enabled: "true"

secrets:
  api-service-secrets:
    enabled: true
    data:
      api_key: ""  # To be filled in environment-specific values

livenessProbe:
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /ready
    port: 8080
  initialDelaySeconds: 15
  periodSeconds: 5

ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: api.mlsecops-pix.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: api-service-tls
      hosts:
        - api.mlsecops-pix.example.com